{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"_36_Enums.Role": {
				"type": "string",
				"enum": [
					"customer",
					"admin"
				]
			},
			"DefaultSelection_Prisma._36_UserPayload_": {
				"properties": {
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"role": {
						"$ref": "#/components/schemas/_36_Enums.Role"
					},
					"phone": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"createdAt",
					"role",
					"phone",
					"address",
					"password",
					"email",
					"id",
					"name"
				],
				"type": "object"
			},
			"User": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_UserPayload_",
				"description": "Model User"
			},
			"IUser": {
				"$ref": "#/components/schemas/User"
			},
			"IFunctionResponse_IUser-Array-or-null_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/IUser"
						},
						"type": "array",
						"nullable": true
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"IFunctionResponse_IUser-or-null_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/IUser"
							}
						],
						"nullable": true
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"IFunctionResponse_null_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"type": "number",
						"enum": [
							null
						],
						"nullable": true
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Pick_User.Exclude_keyofUser.role-or-createdAt-or-id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email",
					"password",
					"address",
					"phone"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.role-or-createdAt-or-id_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.role-or-createdAt-or-id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IRegister": {
				"$ref": "#/components/schemas/Omit_User.role-or-createdAt-or-id_"
			},
			"IFunctionResponse_IRegister_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/IRegister"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Pick_Category.Exclude_keyofCategory.id__": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Category.id_": {
				"$ref": "#/components/schemas/Pick_Category.Exclude_keyofCategory.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"ICategory": {
				"$ref": "#/components/schemas/Omit_Category.id_"
			},
			"IFunctionResponse_ICategory_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ICategory"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"IFunctionResponse_ICategory-Array-or-null_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/ICategory"
						},
						"type": "array",
						"nullable": true
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Pick_User.email-or-password_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"ILogin": {
				"$ref": "#/components/schemas/Pick_User.email-or-password_"
			},
			"IFunctionResponse_ILogin_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ILogin"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "server",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/api/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "- List of users or null if no users found.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_IUser-Array-or-null_"
								}
							}
						}
					}
				},
				"description": "Retrieves a list of all users.",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/userByEmail": {
			"get": {
				"operationId": "GetOneUserByEmail",
				"responses": {
					"200": {
						"description": "- User details or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_IUser-or-null_"
								}
							}
						}
					}
				},
				"description": "Retrieves a user by email.",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "- User's email.",
						"in": "query",
						"name": "email",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "john@example.com"
					}
				]
			}
		},
		"/api/UserById/{id}": {
			"delete": {
				"operationId": "DeleteUserByID",
				"responses": {
					"200": {
						"description": "- Status of the deletion.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_null_"
								}
							}
						}
					}
				},
				"description": "Deletes a user by ID.",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "- User ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						},
						"example": 1
					}
				]
			}
		},
		"/api/createAdmin": {
			"post": {
				"operationId": "CreateAdmin",
				"responses": {
					"200": {
						"description": "- Registration result.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_IRegister_"
								}
							}
						}
					}
				},
				"description": "Registers a new Admin.",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- User data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IRegister",
								"description": "- User data."
							}
						}
					}
				}
			}
		},
		"/api/category": {
			"post": {
				"operationId": "CreateCategory",
				"responses": {
					"200": {
						"description": "- The created category.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_ICategory_"
								}
							}
						}
					}
				},
				"description": "Creates a new category.",
				"tags": [
					"Category"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- Category data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICategory",
								"description": "- Category data."
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllCategories",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_ICategory-Array-or-null_"
								}
							}
						}
					}
				},
				"description": "Retrieves all categories.",
				"tags": [
					"Category"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/category/{id}": {
			"delete": {
				"operationId": "DeleteCategory",
				"responses": {
					"200": {
						"description": "- Status of the deletion.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_null_"
								}
							}
						}
					}
				},
				"description": "Deletes a category by ID.",
				"tags": [
					"Category"
				],
				"security": [],
				"parameters": [
					{
						"description": "- Category ID.",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/auth/register": {
			"post": {
				"operationId": "RegisterUser",
				"responses": {
					"200": {
						"description": "- Registration result.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_IRegister_"
								}
							}
						}
					}
				},
				"description": "Registers a new user.",
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- User data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IRegister",
								"description": "- User data."
							}
						}
					}
				}
			}
		},
		"/api/auth/login": {
			"post": {
				"operationId": "LoginUser",
				"responses": {
					"200": {
						"description": "- Login result with JWT token.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_ILogin_"
								}
							}
						}
					}
				},
				"description": "Logs in a user.",
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- User credentials.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ILogin",
								"description": "- User credentials."
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}