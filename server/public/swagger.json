{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"_36_Enums.Role": {
				"type": "string",
				"enum": [
					"customer",
					"admin"
				]
			},
			"DefaultSelection_Prisma._36_UserPayload_": {
				"properties": {
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"role": {
						"$ref": "#/components/schemas/_36_Enums.Role"
					},
					"phone": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"createdAt",
					"role",
					"phone",
					"address",
					"password",
					"email",
					"id",
					"name"
				],
				"type": "object"
			},
			"User": {
				"$ref": "#/components/schemas/DefaultSelection_Prisma._36_UserPayload_",
				"description": "Model User"
			},
			"IUser": {
				"$ref": "#/components/schemas/User"
			},
			"IFunctionResponse_IUser-Array-or-null_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/IUser"
						},
						"type": "array",
						"nullable": true
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"IFunctionResponse_IUser-or-null_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"allOf": [
							{
								"$ref": "#/components/schemas/IUser"
							}
						],
						"nullable": true
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Pick_User.Exclude_keyofUser.role-or-createdAt-or-id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email",
					"password",
					"address",
					"phone"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.role-or-createdAt-or-id_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.role-or-createdAt-or-id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"TRegister": {
				"$ref": "#/components/schemas/Omit_User.role-or-createdAt-or-id_"
			},
			"IFunctionResponse_TRegister_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/TRegister"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Pick_User.email-or-password_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"TLogin": {
				"$ref": "#/components/schemas/Pick_User.email-or-password_"
			},
			"IFunctionResponse_TLogin_": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double"
					},
					"message": {
						"type": "string"
					},
					"error": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/TLogin"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"message"
				],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "server",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/api/users": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "- List of users or null if no users found.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_IUser-Array-or-null_"
								}
							}
						}
					}
				},
				"description": "Retrieves a list of all users.",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/userByEmail": {
			"get": {
				"operationId": "GetOneUserByEmail",
				"responses": {
					"200": {
						"description": "- User details or null if not found.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_IUser-or-null_"
								}
							}
						}
					}
				},
				"description": "Retrieves a user by email.",
				"tags": [
					"UsersController"
				],
				"security": [],
				"parameters": [
					{
						"description": "- User's email.",
						"in": "query",
						"name": "email",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/auth/register": {
			"post": {
				"operationId": "RegisterUser",
				"responses": {
					"200": {
						"description": "- Registration result.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_TRegister_"
								}
							}
						}
					}
				},
				"description": "Registers a new user.",
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- User data.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TRegister",
								"description": "- User data."
							}
						}
					}
				}
			}
		},
		"/api/auth/login": {
			"post": {
				"operationId": "LoginUser",
				"responses": {
					"200": {
						"description": "- Login result with JWT token.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFunctionResponse_TLogin_"
								}
							}
						}
					}
				},
				"description": "Logs in a user.",
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- User credentials.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TLogin",
								"description": "- User credentials."
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}